<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="fLogin.IconOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAUDBAQEAwUEBAQFBQUGBwwIBwcHBw8LCwkMEQ8SEhEPERET
        FhwXExQaFRERGCEYGh0dHx8fExciJCIeJBweHx7/2wBDAQUFBQcGBw4ICA4eFBEUHh4eHh4eHh4eHh4e
        Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh7/wAARCACgAKADAREAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD67oAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAC
        gAoAKACgAoAKACgAoAKAGo+4nA+X1oAdQAUAFABQAUAFABQAUAFADUfcTgfL60AOoAKACgAoAKACgAoA
        KAI2zJwOg9aAM7xXfy6R4bvtVgi837DEbmSIdZI0+aRR7lA2PfFRN8sW+xdOKlJRfUtaReRX1is8EyzR
        n7ki9HUgFW/FSp/GqTurolpp2ZbpiCgAoAKACgAoAKAI2zJwOg9aAJAABgUAFABQAUAFABQAUAFABQAA
        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
</value>
  </data>
</root>